import dotenv
import os
import warnings

from langchain_huggingface import HuggingFaceEndpoint
from langchain.prompts import PromptTemplate


warnings.filterwarnings('ignore') # ігнорувати warnings
dotenv.load_dotenv()

llm = HuggingFaceEndpoint(
    repo_id = 'mistralai/Mistral-7B-Instruct-v0.3',
    temperature = 0.3,
)


# Prompt
# інструкція
# контекст
# дані користувача
# формат відповіді




# Аналіз тональності
#
# Визнач, чи є тональність тексту позитивною,
# негативною чи нейтральною.

# Приклад 1:
# Input:
# Output:
#
# Користувач:
# Модель:
#
# Human:
# AI:


# prompt = """
# Ти класифікатор текстів. Твоя задача віднести текст до
# одного з класів: позитивний, негативний, нейтральний.
# Відповідь має бути одним словом з цих трьох.
#
# Приклад 1:
# Користувач: Чудове відео, мені неймовірно сподобалось
# Модель: позитивний
#
# Приклад 2:
# Користувач: Дарма витратив час на це
# Модель: негативний
#
# Приклад 3:
# Користувач: Непогано, на один вечір підійде
# Модель: нейтральний
#
# Користувач: Бездарна гра акторів
# Модель:
# """
#
# # response = llm.invoke(prompt)
# # print(response)
#
#
#prompt = PromptTemplate. from_template("""
# [INST]Ти класифікатор текстів. Твоя задача віднести текст до
# одного з класів: позитивний, негативний, нейтральний.
# Відповідь має бути одним словом з цих трьох.
#
# Приклад 1:
# Користувач: Чудове відео, мені неймовірно сподобалось
# Модель: позитивний
#
# ##
#
# Приклад 2:
# Користувач: Дарма витратив час на це
# Модель: негативний
#
# ##
#
# Приклад 3:
# Користувач: Непогано, на один вечір підійде
# Модель: нейтральний
# [/INST]
#
# [INST]
# Користувач: {user_data}
# Модель: [/INST]
# """)
#

# data = input("Введіть повідомлення: ")
#
# # формуємо промпт для конкретного повідомлення
# user_prompt = prompt.format(user_data=data)
#
# response = llm.invoke(user_prompt)
#
# print(f"Результат: {response}")



# Види промптів

# Zero shot -- без прикладів, просто інструкція
# Few shot -- з прикладом(ами)
# Chain of Thouht(COT, CoT) -- ланцюг думок(хід думок)


# zero_shot_prompt = '''
# Коли мені було 6 років, я був вдвічі молодший за свою сестру.
# Моїй сестрі зараз 40 років, скільки мені років?
# '''
#
# chain_of_thought_prompt = """
# [INST]Ти розв'язуєш метематичні задачі.
#
# Приклад:
# Задача: Коли мені було 6 років, я був вдвічі молодший за свою сестру.
# Моїй сестрі зараз 40 років, скільки мені років?
#
# Хід думок:
# Коли мені було 6 років, моїй сестрі було 6*2=12 років
# Моя сестра старша за мене на 12 - 6 = 6 років
# Якщо моїй сестрі зараз 40 років, то мені 40 - 6 = 34 роки
#
# Відповідь: 34 роки
# [/INST]
#
# [INST]
# Задача: Коли мені було 4 років, я був втричі молодший за свою сестру.
# Моїй сестрі зараз 28 років, скільки мені років?
#
# Відповідь:
# [/INST]
# """
#
# response = llm.invoke(chain_of_thought_prompt)
# print(response)
# import random
#
# prompt = PromptTemplate.from_template("""
# [INST]Ти програміст.Твоє завдання написати просту функцію.[INST]
# Приклад 1:
# [INST]Умова:{user_task}
#
# Мщва програмування :{user_task}
#
# Виконання:
# [INST]
#
# """)
# def den_num():
#
#     num = random.randint(1,10)
#     return num
#
#
# user_task = input("Введіть яка функція вам необхідна:")
# user_language = input("Вкажіть мову програмування:")
# result = prompt.format(user_task=user_task,user_language=user_language)
#
# response = llm.invoke(result)
# print(f"Result:{response}")
"""Прочитайте файл data\lesson10\products.txt з описом
Практичне завдання
послуг СПА. Напишіть промпт для рекомендації послуги
виходячи з запиту користувача
Вхідні параметри – опис товарів, запит користувача
Реалізуйте двома способами:
 Zero-shot
 Chain of Thoughts"""


prompt = PromptTemplate. from_template("""

[INST]
Ти консультант в СПА  салоні .Твої відповіді чіткі, короткі.
Для відповіді достатньо одного речення.
Ти має документ з описом послуг.

Документ:   
{doc}

Приклад1:  
Запит: Масаж для спини 
Хід-думок: 
Знайти послуги де вказано слово спина Стоун-терапія , Глибокотканинний масаж.
Дізнатися ціни : Стоун-терапія -1400, Глибокотканинний масаж-1500.
Вибір найдорожчої послуги:Глибокотканинний масаж.

Відповідь:Глибокотканинний масаж. 
[/INST]

[INST]
Запит: {user_input}

Відповідь: 
[/INST]

"""
)

with open('doc',"r",encoding= "utf-8") as f:
     doc = f.read()

user_input= input("Запит користувача: ")
result= prompt.format(doc=doc, user_input=user_input)
outt_put=llm.invoke(result)
print(outt_put)

