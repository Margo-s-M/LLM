# –ù–∞–ø–∏—à—ñ—Ç—å –º–æ–¥–µ–ª—å
# —è–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç—É—î –æ–¥–Ω—É –≤–∞–ª—é—Ç—É –≤ —ñ–Ω—à—É –∑–∞ –Ω–∏–Ω—ñ—à–Ω—ñ–º –∫—É—Ä—Å–æ–º.
# –î–ª—è —Ü—å–æ–≥–æ –Ω–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—ó,
# —è–∫–∞ –æ—Ç—Ä–∏–º—É—î –Ω–æ–º—ñ–Ω–∞–ª —Ç–∞ –∫—É—Ä—Å —ñ —Ä–æ–±–∏—Ç—å –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—é.
# –†–µ–∞–ª—ñ–∑—É–π—Ç–µ 2 –ª–∞–Ω—Ü—é–≥–∞:
# ÔÇ∑ –ø–µ—Ä—à–∏–π –æ—Ç—Ä–∏–º—É—î –Ω–∞–∑–≤–∏ –≤–∞–ª—é—Ç —Ç–∞ —à—É–∫–∞—î –∫—É—Ä—Å –≤ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—ñ
# ÔÇ∑ –¥—Ä—É–≥–∏–π –æ—Ç—Ä–∏–º—É—î –Ω–æ–º—ñ–Ω–∞–ª —Ç–∞ –∫—É—Ä—Å —ñ –∑–∞—Å—Ç–æ—Å–æ–≤—É—î —Ñ—É–Ω–∫—Ü—ñ—é –∫–æ–≤–µ—Ä—Ç–∞—Ü—ñ—ó

import os
import dotenv
import re
import requests
from langchain_core.tools import Tool
from langchain_core.messages import SystemMessage, HumanMessage
from langchain_google_genai import ChatGoogleGenerativeAI
from langgraph.prebuilt import create_react_agent

# --- 1. –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ ---
dotenv.load_dotenv()

# --- 2. LLM –º–æ–¥–µ–ª—å ---
llm = ChatGoogleGenerativeAI(
    model='gemini-2.0-flash',
    google_api_key=os.getenv('GEMINI_API_KEY'),
)

# --- 3. –§—É–Ω–∫—Ü—ñ—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ—ó –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó ---
def auto_currency_convert_api(input_str: str) -> str:
    """
    –ü—Ä–∏–π–º–∞—î —Ä—è–¥–æ–∫ —Ç–∏–ø—É '–ö–æ–Ω–≤–µ—Ä—Ç—É–π 100 USD –≤ EUR' —ñ –ø–æ–≤–µ—Ä—Ç–∞—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
    """
    match = re.search(r'(\d+(?:\.\d+)?)\s*([A-Z]{3})\s*–≤\s*([A-Z]{3})', input_str.upper())
    if not match:
        return "–§–æ—Ä–º–∞—Ç –∑–∞–ø–∏—Ç—É –º–∞—î –±—É—Ç–∏: '–ö–æ–Ω–≤–µ—Ä—Ç—É–π 100 USD –≤ EUR'"

    amount = float(match.group(1))
    from_currency = match.group(2)
    to_currency = match.group(3)

    url = f"https://api.exchangerate.host/convert?from={from_currency}&to={to_currency}&amount={amount}"
    response = requests.get(url)

    if response.status_code != 200:
        return "–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –¥–∞–Ω–∏—Ö –∑ API."

    data = response.json()
    result = round(data['result'], 2)
    rate = round(data['info']['rate'], 4)

    return f"{amount} {from_currency} = {result} {to_currency} –∑–∞ –∫—É—Ä—Å–æ–º {rate}"

# --- 4. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è Tool ---
currency_conversion_tool = Tool(
    name="CurrencyConverter",
    func=auto_currency_convert_api,
    description="–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç—É—î –≤–∞–ª—é—Ç—É. –ù–∞–ø—Ä–∏–∫–ª–∞–¥: '–ö–æ–Ω–≤–µ—Ä—Ç—É–π 100 USD –≤ EUR'"
)

# --- 5. –î–æ–¥–∞—î–º–æ Tool –¥–æ –∞–≥–µ–Ω—Ç–∞ ---
tools = [currency_conversion_tool]
agent = create_react_agent(model=llm, tools=tools)

# --- 6. –°—Ç–∞—Ä—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ç–∞ —Å–µ—Å—ñ—è ---
data_input = {
    'messages': [
        SystemMessage(content='–¢–∏ –ø–æ–º—ñ—á–Ω–∏–∫ —É —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–∏—Ö –ø–∏—Ç–∞–Ω–Ω—è—Ö. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –∫–æ–Ω–≤–µ—Ä—Ç—É–≤–∞—Ç–∏ –≤–∞–ª—é—Ç—É –∑–∞ –∑–∞–ø–∏—Ç–æ–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. '
                              '–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç CurrencyConverter, –∫–æ–ª–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø—Ä–æ—Å–∏—Ç—å "–ö–æ–Ω–≤–µ—Ä—Ç—É–π 100 USD –≤ EUR" –∞–±–æ –ø–æ–¥—ñ–±–Ω–µ.'),
    ]
}

# --- 7. –¶–∏–∫–ª –≤–∑–∞—î–º–æ–¥—ñ—ó ---
while True:
    user_input = input("YOU: ")
    if user_input == "":
        break

    data_input['messages'].append(HumanMessage(content=user_input))
    response = agent.invoke(data_input)
    data_input = response

    print("ü§ñ:", data_input['messages'][-1].content)
